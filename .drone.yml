---
kind: pipeline
type: kubernetes
name: new-commit
trigger:
  ref:
    - refs/heads/main
steps:
  - name: "Pre-Commit Checks"
    image: python:3.11-slim-bookworm
    environment:
      DEBIAN_FRONTEND: "noninteractive"
      PIP_ROOT_USER_ACTION: "ignore"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      POETRY_VERSION: "1.8.2"
    commands:
      - |
        <<EOT bash
        set -ex;
        apt-get update && apt-get install -y gcc git
        python -m pip install "poetry==${POETRY_VERSION}" --user --no-warn-script-location
        python -m poetry install --only main,dev
        python -m poetry run pre-commit run --all-files
        EOT

  - name: "[Dev] Build PIP Package"
    image: moby/buildkit:rootless
    when:
      status: [success]
    environment:
      BUILDKITD_FLAGS: --oci-worker-no-process-sandbox
    volumes:
      - name: dist
        path: ./dist
    commands:
      - |
        <<EOT sh
        /usr/bin/buildctl-daemonless.sh build \
          --progress 'plain' \
          --frontend 'dockerfile.v0' \
          --local 'context=.' \
          --local 'dockerfile=.' \
          --output 'type=local,dest=./dist' \
          --opt target=dist \
          --opt build-arg:BUILD_GIT_BRANCH=${DRONE_COMMIT_BRANCH} \
          --opt build-arg:BUILD_GIT_COMMIT=${DRONE_COMMIT} \
          --opt build-arg:BUILD_GIT_AUTHOR=${DRONE_COMMIT_AUTHOR} \
          --opt build-arg:BUILD_GIT_AUTHOR_NAME=${DRONE_COMMIT_AUTHOR_NAME} \
          --opt build-arg:BUILD_GIT_REPO_LINK=${DRONE_REPO_LINK} \
          --opt build-arg:BUILD_CREATED=${DRONE_BUILD_CREATED} \
          --opt build-arg:BUILD_NUMBER=${DRONE_BUILD_NUMBER}
        EOT

  - name: "[Dev] Publish to PyPi"
    image: plugins/pypi
    when:
      status: [success]
    volumes:
      - name: dist
        path: ./dist
    settings:
      username:
        from_secret: pypiUsername
      password:
        from_secret: pypiPassword
      repository: https://pypi.asci.synchrotron.org.au/mx3/dev
      distributions:
        - sdist
        - bdist_wheel
      skip_build: true

  - name: "[Dev] Docker Push"
    image: moby/buildkit:rootless
    when:
      status: [success]
    environment:
      BUILDKITD_FLAGS: --oci-worker-no-process-sandbox
      DOCKER_USERNAME:
        from_secret: dockerHubAccount
      DOCKER_PASSWORD:
        from_secret: dockerHubPassword
    commands:
      - |
        <<EOT sh
        /usr/bin/buildctl-daemonless.sh build \
          --progress 'plain' \
          --frontend 'dockerfile.v0' \
          --local 'context=.' \
          --local 'dockerfile=.' \
          --output 'type=image,name=docker.asci.synchrotron.org.au/${DRONE_REPO,,}:${DRONE_COMMIT},push=true' \
          --opt target=runtime \
          --opt build-arg:BUILD_GIT_BRANCH=${DRONE_COMMIT_BRANCH} \
          --opt build-arg:BUILD_GIT_COMMIT=${DRONE_COMMIT} \
          --opt build-arg:BUILD_GIT_AUTHOR=${DRONE_COMMIT_AUTHOR} \
          --opt build-arg:BUILD_GIT_AUTHOR_NAME=${DRONE_COMMIT_AUTHOR_NAME} \
          --opt build-arg:BUILD_GIT_REPO_LINK=${DRONE_REPO_LINK} \
          --opt build-arg:BUILD_CREATED=${DRONE_BUILD_CREATED} \
          --opt build-arg:BUILD_NUMBER=${DRONE_BUILD_NUMBER}
        EOT

  - name: notify-teams
    image: docker.asci.synchrotron.org.au/dpi/as-drone-teams-notify:main
    settings:
      webhook_url:
        from_secret: mxTeamsCIWebhook

---
kind: pipeline
type: kubernetes
name: new-release
trigger:
  ref:
    - refs/tags/*
steps:
  - name: "Pre-Commit Checks"
    image: python:3.11-slim-bookworm
    environment:
      DEBIAN_FRONTEND: "noninteractive"
      PIP_ROOT_USER_ACTION: "ignore"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      POETRY_VERSION: "1.8.2"
    commands:
      - |
        <<EOT bash
        set -ex;
        apt-get update && apt-get install -y gcc git
        python -m pip install "poetry==${POETRY_VERSION}" --user --no-warn-script-location
        python -m poetry install --only main,dev
        python -m poetry run pre-commit run --all-files
        EOT

  - name: "[Prod] Build PIP Package"
    image: moby/buildkit:rootless
    when:
      status: [success]
    environment:
      BUILDKITD_FLAGS: --oci-worker-no-process-sandbox
    volumes:
      - name: dist
        path: ./dist
    commands:
      - |
        <<EOT sh
        /usr/bin/buildctl-daemonless.sh build \
          --progress 'plain' \
          --frontend 'dockerfile.v0' \
          --local 'context=.' \
          --local 'dockerfile=.' \
          --output 'type=local,dest=./dist' \
          --opt target=dist \
          --opt build-arg:BUILD_GIT_BRANCH=${DRONE_COMMIT_BRANCH} \
          --opt build-arg:BUILD_GIT_COMMIT=${DRONE_COMMIT} \
          --opt build-arg:BUILD_GIT_AUTHOR=${DRONE_COMMIT_AUTHOR} \
          --opt build-arg:BUILD_GIT_AUTHOR_NAME=${DRONE_COMMIT_AUTHOR_NAME} \
          --opt build-arg:BUILD_GIT_REPO_LINK=${DRONE_REPO_LINK} \
          --opt build-arg:BUILD_CREATED=${DRONE_BUILD_CREATED} \
          --opt build-arg:BUILD_NUMBER=${DRONE_BUILD_NUMBER}
        EOT

  - name: "[Prod] Publish to PyPi"
    image: plugins/pypi
    when:
      status: [success]
    volumes:
      - name: dist
        path: ./dist
    settings:
      username:
        from_secret: pypiUsername
      password:
        from_secret: pypiPassword
      repository: https://pypi.asci.synchrotron.org.au/mx3/prod
      distributions:
        - sdist
        - bdist_wheel
      skip_build: true

  - name: "[Prod] Docker Push"
    image: moby/buildkit:rootless
    when:
      status: [success]
    environment:
      BUILDKITD_FLAGS: --oci-worker-no-process-sandbox
      DOCKER_USERNAME:
        from_secret: dockerHubAccount
      DOCKER_PASSWORD:
        from_secret: dockerHubPassword
    commands:
      - |
        <<EOT sh
        /usr/bin/buildctl-daemonless.sh build \
          --progress 'plain' \
          --frontend 'dockerfile.v0' \
          --local 'context=.' \
          --local 'dockerfile=.' \
          --output 'type=image,name=docker.asci.synchrotron.org.au/${DRONE_REPO,,}:${DRONE_COMMIT},push=true' \
          --opt target=runtime \
          --opt build-arg:BUILD_GIT_BRANCH=${DRONE_COMMIT_BRANCH} \
          --opt build-arg:BUILD_GIT_COMMIT=${DRONE_COMMIT} \
          --opt build-arg:BUILD_GIT_AUTHOR=${DRONE_COMMIT_AUTHOR} \
          --opt build-arg:BUILD_GIT_AUTHOR_NAME=${DRONE_COMMIT_AUTHOR_NAME} \
          --opt build-arg:BUILD_GIT_REPO_LINK=${DRONE_REPO_LINK} \
          --opt build-arg:BUILD_CREATED=${DRONE_BUILD_CREATED} \
          --opt build-arg:BUILD_NUMBER=${DRONE_BUILD_NUMBER}
        EOT

  - name: notify-teams
    image: docker.asci.synchrotron.org.au/dpi/as-drone-teams-notify:main
    settings:
      webhook_url:
        from_secret: mxTeamsCIWebhook

---
kind: secret
name: mxTeamsCIWebhook
get:
  path: asci-cicd-prod
  name: mxTeamsCIWebhook
---
kind: secret
name: pypiUsername
get:
  path: asci-cicd-prod
  name: pypiUsername
---
kind: secret
name: pypiPassword
get:
  path: asci-cicd-prod
  name: pypiPassword
---
kind: secret
name: dockerServer
get:
  path: asci-cicd-prod
  name: dockerServer
---
kind: secret
name: dockerHubAccount
get:
  path: asci-cicd-prod
  name: dockerHubAccount
---
kind: secret
name: dockerHubPassword
get:
  path: asci-cicd-prod
  name: dockerHubPassword
